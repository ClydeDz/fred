{"version":3,"sources":["utils/ConversionTypes.js","utils/Calculation.js","component-styles/ConversionFormStyles.js","components/ConversionForm.js","components/Copyright.js","component-styles/HeaderStyles.js","components/Header.js","theme.js","index.js","App.js"],"names":["ConversionTypes","CostPer100g","CostPer100ml","CostPer1l","Calculation","input","test","conversionType","quantity","cost","this","IsValid","parseFloat","toFixed","ConversionFormStyles","makeStyles","theme","paper","marginTop","spacing","marginBottom","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","h2","fontSize","typography","h1","animation","color","primary","tertiary","formControl","minWidth","SignIn","classes","calculation","React","useState","perUnitValue","setPerUnitValueValue","quantityUnit","quantityUnitDisplay","quantityAdornment","setQuantityAdornment","currency","model","setModelValues","handleChange","prop","event","target","value","useEffect","result","Calculate","Container","component","maxWidth","CssBaseline","className","noValidate","FormControl","variant","InputLabel","htmlFor","Select","id","name","tabIndex","autoFocus","onChange","labelWidth","MenuItem","TextField","fullWidth","label","InputProps","endAdornment","InputAdornment","position","type","pattern","error","helperText","align","Copyright","Typography","Link","href","Date","getFullYear","HeaderStyles","root","small","height","large","Header","Avatar","alt","src","process","createMuiTheme","red","A400","background","default","ReactDOM","render","ThemeProvider","Box","my","document","querySelector"],"mappings":"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","file":"static/js/main.4595ae2c.chunk.js","sourcesContent":["const ConversionTypes = {\n    CostPer100g: 1,\n    CostPer100ml: 2,\n    CostPer1l: 3\n};\n\nexport default ConversionTypes;","import ConversionTypes from './ConversionTypes';\n\nexport class Calculation {\n    IsValid(input) {\n        return /^\\d+(\\.\\d+)*$/.test(input) && input !== \"\" && input !== 0 && input !== \"0\";\n    }\n\n    Calculate(conversionType, quantity, cost) { \n        let inputIsValid = this.IsValid(quantity) && this.IsValid(cost);\n        if(!inputIsValid)\n            return 0;\n    \n        if(conversionType === ConversionTypes.CostPer1l){ \n            return parseFloat(((100/(quantity*100))*cost).toFixed(2));\n        }\n         \n        return parseFloat(((100/quantity)*cost).toFixed(2));\n    }\n}  ","import { makeStyles } from '@material-ui/core/styles';\n\nconst ConversionFormStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    h2: { \n        fontSize: theme.typography.h1,\n        animation: '$color-change 9s infinite',\n    }, \n    '@keyframes color-change': {\n        '0%': { \n            color: theme.palette.primary.main, \n        },\n        '40%': { \n            color: theme.palette.tertiary.main, \n        },\n        '80%': { \n            color: theme.palette.secondary.main,\n        },\n        '100%': { \n            color: theme.palette.primary.main,\n        },\n    },\n    formControl: {\n        margin: theme.spacing(0, 0, 1, 0),\n        minWidth: 120,\n    },\n}));\n\nexport default ConversionFormStyles;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport { Calculation } from '../utils/Calculation'; \nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport ConversionFormStyles from '../component-styles/ConversionFormStyles';\nimport ConversionTypes from '../utils/ConversionTypes';\n\nexport default function SignIn() {\n  const classes = ConversionFormStyles();\n  const calculation = new Calculation(); \n\n  const [perUnitValue, setPerUnitValueValue] = React.useState('0')\n  const [quantityAdornment, setQuantityAdornment] = React.useState({\n    quantityUnit: 'g', quantityUnitDisplay: '/ 100g'\n  })\n  const [model, setModelValues] = React.useState({\n    cost: '2',\n    quantity: '100',\n    conversionType: ConversionTypes.CostPer100g,\n    currency: '$'\n  }); \n\n  const handleChange = prop => event => { \n    setModelValues({ ...model, [prop]: event.target.value });    \n  };\n\n  React.useEffect(() => {  \n    let result = calculation.Calculate(model.conversionType, model.quantity, model.cost);\n    setPerUnitValueValue(result);\n  }, [model, calculation]);\n\n  const handleConversionTypeChange = prop => event => { \n    setModelValues({ ...model, [prop]: event.target.value });  \n    switch(event.target.value){\n      case 1:\n        setQuantityAdornment({\n          quantityUnit: 'g', quantityUnitDisplay: '/ 100g'\n        });   \n        break;\n      case 2:\n        setQuantityAdornment({\n          quantityUnit: 'ml', quantityUnitDisplay: '/ 100ml'\n        });    \n        break;\n      case 3:\n        setQuantityAdornment({\n          quantityUnit: 'L', quantityUnitDisplay: '/ 1L'\n        });   \n        break;\n      default:\n        setQuantityAdornment({\n          quantityUnit: 'g', quantityUnitDisplay: '/ 100g'\n        });   \n    } \n  };\n \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate> \n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"demo-simple-select-outlined\">\n              Conversion \n            </InputLabel>\n            <Select \n              id=\"demo-simple-select-outlined\"\n              name=\"conversionType\" \n              tabIndex={0} \n              autoFocus={true}\n              value={model.conversionType}\n              onChange={handleConversionTypeChange('conversionType')}\n              labelWidth={82}\n              > \n                <MenuItem value={ConversionTypes.CostPer100g}>Calculate cost / 100 g</MenuItem>\n                <MenuItem value={ConversionTypes.CostPer100ml}>Calculate cost / 100 ml</MenuItem>\n                <MenuItem value={ConversionTypes.CostPer1l}>Calculate cost / 1 L</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"quantity\"\n            label=\"Quantity\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">{quantityAdornment.quantityUnit}</InputAdornment>,\n            }}\n            name=\"quantity\"\n            type=\"text\" pattern=\"[0-9]+\"\n            autoFocus={false} \n            error = { !calculation.IsValid(model.quantity) }\n            helperText={ calculation.IsValid(model.quantity) ? \"\": \"Input is invalid\" }\n            value={model.quantity}\n            onChange={handleChange('quantity')}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"cost\"\n            label=\"Price\"\n            name=\"cost\" \n            type=\"text\" pattern=\"[0-9]+\"\n            autoFocus={false}\n            value={model.cost}\n            error={ !calculation.IsValid(model.cost) }\n            helperText={ calculation.IsValid(model.cost) ? \"\" : \"Input is invalid\"}\n            onChange={handleChange('cost')}\n          />\n          <h2 align=\"center\" className={classes.h2}>\n            {model.currency + \"\" + perUnitValue + \" \" + quantityAdornment.quantityUnitDisplay}\n          </h2>\n        </form>\n      </div> \n    </Container>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://clydedsouza.net/\">\n          Clyde D'Souza\n        </Link>{' '}\n        {new Date().getFullYear()}\n      </Typography>\n    );\n  }","import { makeStyles } from '@material-ui/core/styles';\n\nconst HeaderStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n      marginBottom: theme.spacing(1),\n    },\n    h1: {\n      color: theme.palette.primary.main,\n      marginBottom: theme.spacing(0),\n    }\n  }));\n\n\nexport default HeaderStyles;","import React from 'react';\nimport Typography from '@material-ui/core/Typography'; \nimport Avatar from '@material-ui/core/Avatar';\nimport HeaderStyles from '../component-styles/HeaderStyles';\n\nexport default function Header() {\n  const classes = HeaderStyles();\n  const avatarImage = process.env.PUBLIC_URL + \"/images/fred.png\"\n\n    return (\n      <div align=\"center\">\n        <Avatar alt=\"Fred\" src={avatarImage} className={classes.large} />\n        <Typography variant=\"h4\" component=\"h1\" align=\"center\" className={classes.h1}>\n          Fred - Your Purchasing Assistant\n        </Typography> \n      </div> \n    );\n  }","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2196f3',\n    },\n    secondary: {\n      main: '#ff3d00',\n    },\n    tertiary:{\n      main: '#00e676',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport ConversionForm from './components/ConversionForm';\nimport Copyright from './components/Copyright';\nimport Header from './components/Header';\n\nexport default function App() { \n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={4}>\n        <Header />\n        <ConversionForm />\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n"],"sourceRoot":""}